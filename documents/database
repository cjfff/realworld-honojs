// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table follows {
  following_user_id integer 
  followed_user_id integer [note: 'the one who is being followed']
  created_at timestamp
  status integer [note: 'default 0, 1 is following']
}

Table users {
  id integer [primary key]
  username varchar
  role varchar
  created_at timestamp
  bio varchar
  email varchar
  image varchar [note: 'user avatar']
}

Table article_tag_relations {
  tag_id integer
  article_id integer
}

Table tags {
  id integer [primary key]
  name varchar
  is_deleted integer
}

Table article_favorites {
  article_id integer
  user_id integer
  favorited integer [note: '0 is false, 1 is true']
}

Table articles {
  id integer [primary key]
  author integer
  title varchar
  body text [note: 'Content of the post']
  description varchar
  slug varchar
  createdAt timestamp
  updatedAt timestamp
}

Table comments {
  id integer [primary key]
  createdAt timestamp
  updatedAt timestamp
  body text [note: 'Content of the post']
  author integer
  article_id integer
}


Ref: articles.author > users.id // many-to-one

Ref: users.id < follows.following_user_id

Ref: users.id < follows.followed_user_id


Ref: articles.id < article_favorites.article_id
Ref: users.id < article_favorites.user_id
Ref: users.id < comments.author
Ref: articles.id < comments.article_id


Ref: article_tag_relations.tag_id < tags.id
Ref: article_tag_relations.article_id < articles.id

